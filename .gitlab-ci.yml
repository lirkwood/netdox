stages:
  - test
  - build
  - release

variables:
  PIP_CACHE_DIR: $CI_PROJECT_DIR/.pipcache/

cache:
  paths:
    - .pipcache/
    - venv/

before_script:
  - python3 -m venv venv
  - source venv/bin/activate
  - python3 -m pip install tox mypy wheel

tox:
  stage: test
  only:
    - tags
  script: 
    - tox -- --cov

mypy:
  stage: test
  only:
    - tags
  allow_failure: true
  script:
    - mypy --install-types --non-interactive src/netdox

wheel:
  stage: build
  only: 
    - tags
  script:
    - python3 setup.py bdist_wheel

  artifacts:
    paths:
      - dist/*.whl

docker:
  stage: build
  only: 
    - tags
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG

create:
  stage: release
  only: 
    - tags
  script:
    - echo 'Creating release...'
  release:
    tag_name: $CI_COMMIT_TAG
    description: Release version $CI_COMMIT_TAG
    assets:
      links:
        - name: Wheel
          url: $CI_SERVER_URL/$CI_PROJECT_PATH/-/jobs/artifacts/$CI_COMMIT_REF_NAME/download?job=build_wheel
