#!/usr/bin/env bash

## Serve webhook listener
function serve {
    echo -e '[INFO][netdox] Starting gunicorn server on 8080\n'
    gunicorn --reload -b '0.0.0.0:8080' serve:app
}

## Refresh DNS data and upload to PageSeeder
function refresh {
    _refresh 2>&1 | tee "/var/log/refresh-$(date +%F-T%T).log"
}
function _refresh {
    for dir in /opt/app/out/*; do
        rm -rf ${dir}/*
    done

    echo '[INFO][netdox] Refreshing DNS...'

    if python3 refresh.py
        then
            echo '[INFO][netdox] Python exited successfully. Beginning PageSeeder upload...'
            cd /opt/app/out
            zip -r -q netdox-src.zip *
            cd /opt/app
            if ant -lib /opt/ant/lib
                then
                    echo '[INFO][netdox] Upload successful.'
                else
                    echo '[ERROR][netdox] Upload exited with non-zero status. Storing psml for debugging...'
                    cp /opt/app/out/netdox-src.zip /etc/ext/psml.zip
            fi
        else
            echo '[ERROR][netdox] Python exited with non-zero status. Cancelling upload...'
    fi

    cp /opt/app/src/dns.json /etc/ext/cfg/dns.json &> /dev/null
}

## Initialise container to allow other processes to run
function init {
    echo '[INFO][netdox] Pod started. Running init script...'
    
    # make all scripts executable
    chmod 777 /opt/app/*
    
    # decrypt authentication details
    ./crypto.sh decrypt $(printf authivpassphrase | xxd -p) "/etc/ext/cfg/authentication.bin" "/opt/app/src/authentication.json"
    
    # copy any unecrypted cfg files
    for file in /etc/ext/cfg/*.json; do
        cp $file /opt/app/src/$(basename $file) &> /dev/null
    done

    for initscript in plugins/*/init.sh; do
        chmod 777 $initscript
        $initscript
    done

    if python3 init.py
        then
            echo '[INFO][netdox] Python initialisation successful.'
        else
            echo '[ERROR][netdox] Python initialisation unsuccessful. Terminating...'
            exit 1
    fi

    crontab <<< '15 6 * * * netdox refresh'
}


methods=("init" "refresh" "serve")
for arg in "$@"; do
    if [[ ${methods[@]} =~ $arg ]]
        then case $arg in
            serve)
                serve &
                ;;
            *)
                $arg
                ;;
        esac
    elif [[ $arg == 'start' ]]
        then if init
            then refresh & serve
        fi
    fi
done